{% extends 'base.html.twig' %}

{% block body %}
    <div class="flex h-screen">
        {% include 'components/sidebar.html.twig' %}
        <div class="flex flex-col flex-grow px-6 pt-6">
            {% include 'components/topbar.html.twig' %}
            <main class="flex-grow overflow-hidden py-6">
                <div class="flex bg-white h-full rounded-2xl border">
                    {% for column, tasks in groupedTasks %}
                        <div class="flex-1 flex flex-col min-w-0 p-4 pb-0 {% if column == 'In progress' %}border-l-8 border-r-8 border-gray-50{% endif %}">
                            <h2 class="text-2xl font-semibold mb-4 text-center opacity-70">{{ column }}</h2>
                            <div class="scrollable-column overflow-y-auto flex-grow px-2">
                                <div class="space-y-8">
                                    {% for task in tasks %}
                                        <div class="bg-beige p-4 m-4 mx-auto pb-0 rounded-2xl shadow-md task-card cursor-pointer"
                                             data-task-id="{{ task.id }}"
                                             data-task-title="{{ task.nomTache }}"
                                             data-task-description="{{ task.descriptionTache }}"
                                             data-task-date_debut="{{ task.DateDebut|date('d/m/Y') }}"
                                             data-task-date_echeance="{{ task.DateEcheance|date('d/m/Y') }}"
                                             data-task-status="{{ task.status }}">
                                            <h3 class="font-semibold text-sm mb-2">{{ task.nomTache }}</h3>
                                            <p class="text-sm text-gray-600">{{ task.descriptionTache }}</p>
                                            <div class="text-right pb-2">
                                                <button class="text-gray-400 hover:text-gray-600 delete-task-btn">•••</button>
                                            </div>
                                        </div>
                                    {% endfor %}
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </main>
        </div>
    </div>

    <!-- Floating Button -->
    <button id="openModalBtn" class="fixed bottom-8 right-8 bg-primary border border-black text-black font-medium py-2.5 px-5 rounded-full shadow-lg">
        New Task
    </button>

    <!-- Modal -->
    <div id="newTaskModal" class="hidden fixed inset-0 bg-beige bg-opacity-50 overflow-y-auto h-full w-full">
        <div class="relative top-20 mx-auto py-5 px-16 border w-6/12 shadow-lg rounded-2xl bg-beige border-black">
            <div class="mt-4">
                <h3 class="text-xl font-medium text-black text-center">Create a new Task</h3>
                {{ form_start(taskForm, {'attr': {'id': 'taskForm'}}) }}
                <div class="mt-3 px-7 py-3">
                    <div class="mb-6">
                        {{ form_label(taskForm.nom_tache, 'Name', {'label_attr': {'class': 'font-medium block text-left mb-2 ml-2'}}) }}
                        {{ form_widget(taskForm.nom_tache, {'attr': {'class': 'flex w-full h-14 rounded-full border shadow-sm border-black text-center'}}) }}
                    </div>
                    <div class="mb-6">
                        {{ form_label(taskForm.description_tache, 'Description', {'label_attr': {'class': 'font-medium block text-left mb-2 ml-2'}}) }}
                        {{ form_widget(taskForm.description_tache, {'attr': {'class': 'flex h-32 w-full rounded-2xl border shadow-sm border-black p-2'}}) }}
                    </div>
                    <div class="flex flex-row space-x-4">
                        <div class="mb-6 flex-1">
                            {{ form_label(taskForm.date_debut, 'Start Date', {'label_attr': {'class': 'font-medium block text-left mb-2 ml-2'}}) }}
                            {{ form_widget(taskForm.date_debut, {'attr': {'class': 'flex w-full h-14 rounded-full border shadow-sm border-black text-center'}}) }}
                        </div>
                        <div class="mb-6 flex-1">
                            {{ form_label(taskForm.date_echeance, 'End Date', {'label_attr': {'class': 'font-medium block text-left mb-2 ml-2'}}) }}
                            {{ form_widget(taskForm.date_echeance, {'attr': {'class': 'flex w-full h-14 rounded-full border shadow-sm border-black text-center'}}) }}
                        </div>
                    </div>
                </div>
                <div class="items-center px-4 pt-2 pb-3 text-center">
                    <button type="submit" id="submitTaskBtn" class="bg-primary border border-black text-black font-medium py-2.5 px-5 rounded-full">
                        Create Task
                    </button>
                </div>
                {{ form_end(taskForm) }}
            </div>
        </div>
    </div>

    <div id="taskDetailsModal" class="hidden fixed inset-0 bg-beige bg-opacity-50 overflow-y-auto h-full w-full">
        <div class="relative top-20 mx-auto py-5 px-16 border w-5/12 shadow-lg rounded-2xl bg-beige border-black">
            <div class="mt-4">
                <h1 id="taskTitle" class="text-2xl font-semibold mb-3 opacity-60"></h1>
                <div class="flex flex-row gap-16">
                    <div class="flex flex-row gap-1 mb-8">
                        <p class="text-gray-700 text-sm">Start Date : </p>
                        <p id="taskDateDebut" class="text-gray-700 text-sm"></p>
                    </div>
                    <div class="flex flex-row gap-1">
                        <p class="text-gray-700 text-sm">End Date : </p>
                        <p id="taskDateEcheance" class="text-gray-700 text-sm"></p>
                    </div>
                    <div class="flex flex-row gap-1 mb-8">
                        <p class="text-gray-700 text-sm">Status : </p>
                        <p id="taskStatus" class="text-sm text-gray-700"></p>
                    </div>
                </div>
                <div class="flex flex-col">
                    <h3 class="text-lg text-gray-600 font-medium mb-2">Description</h3>
                    <p id="taskDescription" class="text-md text-gray-700"></p>
                </div>
                <div class="flex flex-col mt-8">
                    <h3 class="text-lg text-gray-600 font-medium mb-4">Assigned user(s)</h3>
                    <div class="flex flex-row gap-6">
                        <div class="flex flex-row w-max rounded-full border border-black bg-white pl-2 pr-4 py-1.5">
                            <div class="rounded-full h-5 w-5 border border-black bg-yellow-300"></div>
                            <p class="mx-2 text-sm">User 1</p>
                        </div>
                        <div class="flex flex-row w-max rounded-full border border-black bg-white pl-2 pr-4 py-1.5">
                            <div class="rounded-full h-5 w-5 border border-black bg-yellow-300"></div>
                            <p class="mx-2 text-sm">User 2</p>
                        </div>
                        <div class="flex flex-row w-max rounded-full border border-black bg-white pl-2 pr-4 py-1.5">
                            <div class="rounded-full h-5 w-5 border border-black bg-yellow-300"></div>
                            <p class="mx-2 text-sm">User 3</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="mt-12 text-right mb-4">
                <button id="closeTaskDetailsBtn" class="bg-primary border border-black text-black font-medium py-2.5 px-5 rounded-full">
                    Close
                </button>
            </div>
        </div>
    </div>

    <div id="deleteConfirmModal" class="hidden fixed inset-0 bg-beige bg-opacity-50 overflow-y-auto h-full w-full">
        <div class="relative top-20 mx-auto py-5 px-16 border w-6/12 shadow-lg rounded-2xl bg-beige border-black">
            <div class="mt-4">
                <h2 class="text-xl font-bold mb-4 text-center">Confirm Deletion</h2>
                <p class="text-lg text-gray-700 text-center">Are you sure you want to delete this task?</p>
            </div>
            <div class="mt-6 text-center space-x-4">
                <button id="confirmDeleteBtn" class="bg-red-500 text-white font-medium py-2.5 px-5 rounded-full">
                    Delete
                </button>
                <button id="cancelDeleteBtn" class="bg-gray-300 text-black font-medium py-2.5 px-5 rounded-full">
                    Cancel
                </button>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', (event) => {
            const newTaskModal = document.getElementById('newTaskModal');
            const taskDetailsModal = document.getElementById('taskDetailsModal');
            const deleteConfirmModal = document.getElementById('deleteConfirmModal');
            const openModalBtn = document.getElementById('openModalBtn');
            const taskForm = document.getElementById('taskForm');
            const closeTaskDetailsBtn = document.getElementById('closeTaskDetailsBtn');
            const confirmDeleteBtn = document.getElementById('confirmDeleteBtn');
            const cancelDeleteBtn = document.getElementById('cancelDeleteBtn');

            let currentTaskId = null;

            openModalBtn.onclick = function() {
                newTaskModal.style.display = "block";
            }

            window.onclick = function(event) {
                if (event.target == newTaskModal) {
                    newTaskModal.style.display = "none";
                }
                if (event.target == taskDetailsModal) {
                    taskDetailsModal.style.display = "none";
                }
                if (event.target == deleteConfirmModal) {
                    deleteConfirmModal.style.display = "none";
                }
            }

            closeTaskDetailsBtn.onclick = function() {
                taskDetailsModal.style.display = "none";
            }

            cancelDeleteBtn.onclick = function() {
                deleteConfirmModal.style.display = "none";
            }

            document.querySelectorAll('.task-card').forEach(card => {
                card.addEventListener('click', function(e) {
                    if (!e.target.classList.contains('delete-task-btn')) {
                        const title = this.getAttribute('data-task-title');
                        const description = this.getAttribute('data-task-description');
                        const date_debut = this.getAttribute('data-task-date_debut');
                        const date_echeance = this.getAttribute('data-task-date_echeance');
                        const status = this.getAttribute('data-task-status');
                        document.getElementById('taskTitle').textContent = title;
                        document.getElementById('taskDescription').textContent = description;
                        document.getElementById('taskDateDebut').textContent = date_debut;
                        document.getElementById('taskDateEcheance').textContent = date_echeance;
                        document.getElementById('taskStatus').textContent = status;
                        taskDetailsModal.style.display = "block";
                    }
                });
            });

            document.querySelectorAll('.delete-task-btn').forEach(btn => {
                btn.addEventListener('click', function(e) {
                    e.stopPropagation(); // Prevent task details modal from opening
                    currentTaskId = this.closest('.task-card').getAttribute('data-task-id');
                    deleteConfirmModal.style.display = "block";
                });
            });

            confirmDeleteBtn.onclick = function() {
                if (currentTaskId) {
                    axios.delete(`/tasks/${currentTaskId}`)
                        .then(function (response) {
                            console.log('Task deleted successfully');
                            deleteConfirmModal.style.display = "none";
                            location.reload(); // Refresh the page to show updated task list
                        })
                        .catch(function (error) {
                            console.error('Error deleting task:', error);
                        });
                }
            }

            taskForm.onsubmit = function(e) {
                e.preventDefault();
                const formData = new FormData(taskForm);

                axios.post('{{ path('app_task_new') }}', formData)
                    .then(function (response) {
                        console.log(response.data);
                        newTaskModal.style.display = "none";
                        location.reload();
                    })
                    .catch(function (error) {
                        console.error('Error:', error);
                    });
            }
        });
    </script>
{% endblock %}