<?php

namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

class ProfileController extends AbstractController
{
    #[Route('/profile', name: 'profile')]
    public function index(): Response
    {

        $totalview=0;
        $user=$this->getUser();
        $userid= $user->getID();

        $re = $researchRepository->findBy(array('userid' => $userid));

        for ($i = 0; $i < count($re); $i++) {
            $totalview+=$re[$i]->getView();
        }
        $qu = $questionsRepository->findBy(array('ruid' => $userid));


        return $this->render('profile.html.twig', [

            'user' => $user,
            'id' => $userid,
            'totalresearch' => count($re),
            'userinfos' => $userinfoRepository
                ->findBy(['userid'=> $userid]),
            // Ici, tu peux passer des variables supplémentaires si nécessaire
        ]);
    }


      /**
     * @Route("/{id}/update", name="userpanel_update", methods="POST")
     */
    public function user_update($id, Request $request):Response
    {
        $em=$this->getDoctrine()->getManager();
        $sql="UPDATE user SET name=:name,info=:info,skills=:skills, titleandtasks=:titleandtasks WHERE id=:id";
        $statement=$em->getConnection()->prepare($sql);
        $statement->bindValue('name', $request->request->get('name'));
        $statement->bindValue('info', $request->request->get('info'));
        $statement->bindValue('skills', $request->request->get('skills'));
        $statement->bindValue('titleandtasks', $request->request->get('titleandtasks'));
        $statement->bindValue('id', $id);
        $statement->execute();

        return $this->redirectToRoute('userpanel_index',array('id'=>$id));
    }

    /**
     * @Route("/photo", name="userpanel_photo", methods={"GET","POST"})
     */
    public function photo(Request $request,UserRepository $userRepository): Response
    {

        $id=$this->getUser()->getID();
        if ($request->files->get('filename')) {
            $filen =$request->files->get('filename');
            $fileName = $this->generateUniqueFileName().'.'.$filen->guessExtension();
            try {
                $filen->move(
                    $this->getParameter('upload_directory'),
                    $fileName
                );
            } catch (FileException $e) {
                // ... handle exception if something happens during file upload
            }

            $user = $userRepository->find($id);
            $user->setImage($fileName);

            $em = $this->getDoctrine()->getManager();
            $em->persist($user);
            $em->flush();

            return $this->redirectToRoute('userpanel_photo', [
                'id' => $id,
            ]);
        }

        $user = $userRepository->find($id);

        return $this->render('userpanel/photo.html.twig',[
            'user' => $user
        ]);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }




}
